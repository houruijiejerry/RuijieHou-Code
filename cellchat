library(CellChat)
library(patchwork)
library(Seurat)
library(SeuratData)
library(future)

#create cellchat object
data.input = scRNA@assays$RNA@data
meta.data =  scRNA@meta.data

cellchat <- createCellChat(object = data.input, 
                           meta = meta.data, 
                           group.by = "celltype")

#optional, add metadata information to cellchat object
cellchat <- addMeta(cellchat, meta = meta.data)

#set idents of cellchat object
levels(cellchat@idents) # show factor levels of the cell labels
cellchat <- setIdent(cellchat, ident.use = "celltype") 
groupSize <- as.numeric(table(cellchat@idents)) # number of cells in each cell group

#load CellChat recepter-ligand data base
CellChatDB <- CellChatDB.human 
showDatabaseCategory(CellChatDB)

# Show the structure of the database
dplyr::glimpse(CellChatDB$interaction)

# use a subset of CellChatDB for cell-cell communication analysis
#CellChatDB.use <- subsetDB(CellChatDB, search = "Secreted Signaling") # use Secreted Signaling
CellChatDB.use <- CellChatDB # simply use the default CellChatDB
cellchat@DB <- CellChatDB.use

#process expression data for cell-cell communication
#subset the expression data of signaling genes for saving computation cost
cellchat <- subsetData(cellchat) # This step is necessary even if using the whole database
#future::plan("multicore", workers = 1) # do parallel but not for laptop

cellchat <- identifyOverExpressedGenes(cellchat)
cellchat <- identifyOverExpressedInteractions(cellchat)

cellchat <- computeCommunProb(cellchat,population.size = T)
# Filter out the cell-cell communication if there are only few number of cells in certain cell groups
cellchat <- filterCommunication(cellchat, min.cells = 10)

cellchat <- computeCommunProbPathway(cellchat)

cellchat <- aggregateNet(cellchat)

groupSize <- as.numeric(table(cellchat@idents))
par(mfrow = c(1,2), xpd=TRUE)
netVisual_circle(cellchat@net$count, vertex.weight = groupSize,
                 weight.scale = T, label.edge= F,
                 title.name = "Number of interactions")
netVisual_circle(cellchat@net$weight, vertex.weight = groupSize,
                 weight.scale = T, label.edge= F,
                 title.name = "Interaction weights/strength")
